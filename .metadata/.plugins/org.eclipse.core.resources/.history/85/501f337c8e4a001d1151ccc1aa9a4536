package game.controller;

import java.io.FileDescriptor;
import java.io.IOException;
import java.util.Queue;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;

import game.managers.RoomListManager;
import game.managers.RoomManager;
import game.player.Player;
import game.repository.SearchNode;
import member.dto.MemberDTO;

/**
 * Servlet implementation class RoomListController
 */
@WebServlet("/roomlist")
public class RoomListController extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public RoomListController() {
        super();
        // TODO Auto-generated constructor stub
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	@SuppressWarnings("unchecked")
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		
		Queue<SearchNode> list =  RoomListManager.getRooms();
		
		JSONArray jarr = new JSONArray();
		
		while(!list.isEmpty()) {
			jarr.add(list.poll());
		}
		
		JSONObject obj = new JSONObject();
		obj.put("result", obj);
		
		response.getWriter().print(obj.toJSONString());
		return;
		
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	@SuppressWarnings("unchecked")
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		
		synchronized (request.getSession()) {
			
			if(request.getSession().getAttribute("PLAYER")==null) {
				
				MemberDTO member = (MemberDTO)(request.getSession().getAttribute("MemberDTO"));
				Player player = new Player(member);
				
				if(member==null) {
					
					response.getWriter().print(failedMsg());
					return;
				}
				
				request.getSession().setAttribute("PLAYER", player);
				RoomManager room =  RoomListManager.addRoom(player, request.getParameter("roomname"));
				
				if(room==null) {

					response.getWriter().print(failedMsg());
					request.getSession().removeAttribute("PLAYER");
					return;
				}
				
				player.setRoom(room);
				
			}
			
		}
		
		
	}
	
	String failedMsg() {
		
		JSONObject obj = new JSONObject();
		obj.put("result", false);
		return obj.toJSONString();
	} 

}
